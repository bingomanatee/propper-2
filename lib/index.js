!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("@wonderlandlabs/validators")):"function"==typeof define&&define.amd?define(["@wonderlandlabs/validators"],e):(t=t||self).LGE=e(t.validators)}(this,(function(t){"use strict";const e=(t=t&&t.hasOwnProperty("default")?t.default:t)(),n=e.is("function"),s=e.is("object"),a=e.is("string");class r{constructor(t,e,n={}){this.name=t,this.type=e,this.config=n}}function o(t,n){if(e.has(n)){const s=e.is(n);return e=>s(e)?null:`attempt to assign bad value to ${t} ${e} failed type test ${n}`}throw new Error(`no validator named ${n}`)}function i(t,e){const n=o(t,"string");return s=>{const a=n(s);if(a)return a;const r=`attempt to assign bad value to ${t} "${s}" failed test ${e}`;return e.test(s)?null:r}}const l=i("property",/^[\w]+$/);class u{constructor(t,e="instance"){this.targetClass=t,this.instanceName=e}makeOnBadValue(t,e){const{instanceName:n}=this;let s="";return e&&a(e)&&(s=`; requires ${e}`),(e,a,r)=>{if(!r)try{r=`attempt to assign bad value ${e} to ${t} of ${n}${s}`}catch{r=`attempt to assign bad value to ${t} of ${n}${s}`}const o=new Error(r);throw o.value=e,o.target=a,o}}addProp(t,e,u=null,c={}){const h=l(t);if(h)throw new Error(h);let d=null;n(c)?(d=c,c={}):s(e)&&!u?c=e:s(u)&&(u instanceof RegExp||(c=u,u=u.type||null));let{onChange:f,localName:p,start:m,enumerable:g,defaultValue:y,onBadValue:$,test:b}={localName:`_${t}`,onChange:()=>{},onBadValue:this.makeOnBadValue(t,u),enumerable:!0,...c};y&&(e=y),d&&($=d),m||(m=n(e)&&!n(u)?e:Array.isArray(e)?()=>e.length?[...e]:[]:()=>e),u?a(u)?b=o(t,u):n(u)?b=e=>u(e,t):u instanceof RegExp&&(b=i(t,u)):a(b)&&(b=o(t,b)),n(b)||(b=null);const w={configurable:!1,enumerable:g,get(){return p in this||(this[p]=m()),this[p]},set(e){if(p in this&&this[p]===e)return;if(b){const n=b(e,this);if(n)return void $(e,this,n,t)}const n=this[p];this[p]=e,f&&e!==n&&f(e,n,this,t)}};return Object.defineProperty(this.targetClass.prototype,t,w),this.targetClass.prototype.__schema||(this.targetClass.prototype.__schema=new Map),this.targetClass.prototype.__schema.set(t,new r(t,u,c)),this}}return{Propper:u,proppify:t=>new u(t)}}));
